plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.jone'
version = '1.0'
sourceCompatibility = '1.8'
jar.enabled = true
bootJar.enabled = false

repositories {
    mavenLocal()
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    //redis
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.postgresql:postgresql:42.2.5'
    compile("com.alibaba:druid:1.1.12")
    //在线API
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    //文件
    compile ("commons-io:commons-io:2.4")
    compile ("commons-lang:commons-lang:2.4")
    compile ("commons-collections:commons-collections:3.2.1")
    //json
    compile ("com.alibaba:fastjson:1.2.4")
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    testImplementation('org.springframework.boot:spring-boot-starter-test:2.1.3.RELEASE') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
jar {
    String classpath = ''
    configurations.runtime.each {
        classpath = classpath +" lib/"+ it.name
    }
    manifest {
        attributes 'Main-Class': 'com.jone.record.RecordApplication'
        attributes 'Class-Path': classpath
    }
}
task exportJar(type:Copy){
    from configurations.runtime
    into ('build/libs/lib')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}